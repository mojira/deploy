name: 'Mojira Deploy'
description: 'Deploy Mojira community bots to Azure'
inputs:
  azure_client_id:
    description: "Client ID for Azure."
    required: true
  azure_tenant_id:
    description: "Tenant ID for Azure."
    required: true
  azure_subscription_id:
    description: "Subscription ID for Azure."
    required: true
  bastion_name:
    description: "Name of the bastion to deploy to."
    required: true
  bastion_port:
    description: "Port of the bastion tunnel."
    required: false
    default: "50022"
  resource_group:
    description: "Resource group to deploy to."
    required: true
  resource_id:
    description: "Resource ID to deploy to."
    required: true
  ssh_private_key:
    description: "Private SSH key to use for connecting."
    required: true
  username:
    description: "Username for authentication."
    required: true
  artifact_paths:
    description: "Paths to artifacts (folders or files) to upload. String with exactly one path per line."
    required: true
  artifact_destination:
    description: "Target folder for artifact upload."
    required: true
  script:
    description: "Script to run after uploading of artifacts."
    required: false
    default: ""

runs:
  using: 'composite'
  steps:
    - name: Log in to Azure CLI
      uses: azure/login@v2
      with:
        client-id: ${{ inputs.azure_client_id }}
        tenant-id: ${{ inputs.azure_tenant_id }}
        subscription-id: ${{ inputs.azure_subscription_id }}
    - name: Open Bastion tunnel
      run: |
        echo Opening Bastion tunnel...
        az extension add --name bastion
        az network bastion tunnel --name $BASTION_NAME \
          --resource-group $RESOURCE_GROUP --target-resource-id $RESOURCE_ID \
          --resource-port 22 --port $BASTION_PORT &
        az network bastion wait --created --name $BASTION_NAME --resource-group $RESOURCE_GROUP
      shell: bash
      env:
        BASTION_NAME: ${{ inputs.bastion_name }}
        BASTION_PORT: ${{ inputs.bastion_port }}
        RESOURCE_GROUP: ${{ inputs.resource_group }}
        RESOURCE_ID: ${{ inputs.resource_id }}
    - name: Set up SSH key
      run: |
        echo Setting up SSH key...
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
      shell: bash
      env:
        SSH_PRIVATE_KEY: ${{ inputs.ssh_private_key }}
    - name: Upload artifacts
      run: |
        echo Uploading artifacts...
        while IFS= read -r ARTIFACT_PATH; do
          echo Uploading artifact $ARTIFACT_PATH...
          rsync -avh --delete -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -p $BASTION_PORT" $GITHUB_WORKSPACE/$ARTIFACT_PATH $USERNAME@localhost:$ARTIFACT_DESTINATION
        done < <(printf '%s' "$ARTIFACT_PATHS")
      shell: bash
      env:
        BASTION_PORT: ${{ inputs.bastion_port }}
        USERNAME: ${{ inputs.username }}
        ARTIFACT_PATHS: ${{ inputs.artifact_paths }}
        ARTIFACT_DESTINATION: ${{ inputs.artifact_destination }}
    - name: Run deploy script
      run: |
        echo Running internal deploy script...
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -p $BASTION_PORT $USERNAME@localhost <<EOF
          $SCRIPT
        EOF
      shell: bash
      env:
        BASTION_PORT: ${{ inputs.bastion_port }}
        USERNAME: ${{ inputs.username }}
        SCRIPT: ${{ inputs.script }}

branding:
  color: "green"
  icon: "upload-cloud"
